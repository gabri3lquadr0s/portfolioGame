:root {
    --pixel-size: 2px;
    --grid-cell: calc( var(--pixel-size) * 16);
    --bg: #0D1117;
    }
    @media(max-width: 1400px) {
        body { 
            transform: scale(0.60)
        }
    } 
    @media( min-width: 700px ) {
    :root {
        --pixel-size: 3px;
    }
    }
    @media( min-width: 1000px ) {
    :root {
        --pixel-size: 4px;
    }
    }

    html, body {
    height: 95%;
    color: #774df5;
    font-family: Arial, Helvetica, sans-serif;
    }

    body {
    background: var(--bg);
    display: flex;
    align-items: center;
    justify-content: center;
    }

    .pixel-art {
    image-rendering: pixelated;
    }

    .frame {
    width: calc(var(--pixel-size) * 160);
    height: calc(var(--pixel-size) * 144);
    outline: var(--pixel-size) solid #0D1117;
    z-index:1; 
    position:relative;
    }

    .camera {
    width: calc(var(--pixel-size) * 160);
    height: calc(var(--pixel-size) * 144);
    overflow: hidden;
    background: #774df5;
    position:relative;
    }

    .map {
    image-rendering: pixelated;
    background-image: url("../img/Map001.png");
    background-size: 100%;
    width: calc(20 * var(--grid-cell));
    height: calc(15 * var(--grid-cell));
    position: relative;
    }

    .character {
    width: calc( var(--grid-cell)* 2 );
    height: calc( var(--grid-cell)* 2 );
    position: absolute;
    overflow:hidden;
    }

    .shadow {
    width: calc( var(--grid-cell)* 2 );
    height: calc( var(--grid-cell)* 2 );
    position: absolute;
    left:0;
    top:0;
    background: url("https://assets.codepen.io/21542/DemoRpgCharacterShadow.png") no-repeat no-repeat;
    background-size: 100%;
    }

    .character_spritesheet {
    position: absolute;
    background: url("../img/spritesC.png") no-repeat no-repeat;
    background-size: 100%;
    width: calc( var(--grid-cell)* 8 );
    height: calc( var(--grid-cell)* 8 );
    }

    .character[facing="right"] .character_spritesheet {
    background-position-y: calc( var(--pixel-size) * -32 );
    }
    .character[facing="up"] .character_spritesheet {
    background-position-y: calc( var(--pixel-size) * -64 );
    }
    .character[facing="left"] .character_spritesheet {
    background-position-y: calc( var(--pixel-size) * -96 );
    }
    .character[walking="true"] .character_spritesheet {
    animation: walkAnimation 0.6s steps(4) infinite; 
    }

    @keyframes walkAnimation {
    from {
        transform: translate3d(0%,0%,0);
    }
    to {
        transform: translate3d(-100%,0%,0);
    }
    }

    .corner_topleft,
    .corner_topright,
    .corner_bottomleft,
    .corner_bottomright {
    position: absolute;
    width: var(--pixel-size);
    height: var(--pixel-size);
    background: var(--bg);
    z-index:2;
    }

    .corner_topleft {
    top: calc(var(--pixel-size) * -1);
    left: calc(var(--pixel-size) * -1);
    }
    .corner_topright {
    top: calc(var(--pixel-size) * -1);
    right: calc(var(--pixel-size) * -1);
    }
    .corner_bottomleft {
    bottom: calc(var(--pixel-size) * -1);
    left: calc(var(--pixel-size) * -1);
    }
    .corner_bottomright {
    bottom: calc(var(--pixel-size) * -1);
    right: calc(var(--pixel-size) * -1);
    }

    .interactable {
        position: fixed;
        z-index: 9999;
        cursor: pointer;
    }

    
    #message {
        display: block;
        height: 60px;
    }

    .title {
        font-size: 20px;
    }

    .main {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 300px;
    }

    .child1, .child2 {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
    }

    .media {
        display: block;
        height: 500px;
        width: 450px;
    }

    .description {
        width: 500px;
        text-align: justify;
    }